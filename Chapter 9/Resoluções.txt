Chapter 9 Self Test

1. What class is at the top of the exception hierarchy?
R: Throwable 

2. Briefly explain how to use try and catch.
R: in "Try" you put the block of code you want to catch the error, and in "catch", the error handling

3. What is wrong with this fragment?
	// ...
	vals[18] = 10;
	catch (ArrayIndexOutOfBoundsException exc) {
		// handle error
	}
R: There is no "try" block

4. What happens if an exception is not caught?
R: The error is caught by the JVM and the program crashes

5. What is wrong with this fragment?
	class A extends Exception { ...
	class B extends A { ...
		// ...
		try {
			// ...
		}
		catch (A exc) { ... }
		catch (B exc) { ... }
R: The problem is in the order of the catch, B must be the first once it is the subclass

6. Can an inner catch rethrow an exception to an outer catch?
R: Yes, it can

7. The finally block is the last bit of code executed before your program ends. True or False? Explain your answer
R: Yes, as the name says, when all exception are executed or not, the finally block comes

8. What type of exceptions must be explicitly declared in a throws clause of a method?
R: Are the Checked Exceptions

9. What is wrong with this fragment?
class MyClass { // ... }
// ...
throw new MyClass();
R: It is outside the block, and there is no try block

11. What are the three ways that an exception can be generated?
R: Using throw, by the JVM and try exception

12. What are the two direct subclasses of Throwable?
R: Error and Exception

13. What is the multi-catch feature?
R: The multi-catch feature in Java, allows you to catch multiple types of exceptions in a single catch block.

14. Should your code typically catch exceptions of type Error?
R: Depends which you type of codes are your, so you can see the type of error
